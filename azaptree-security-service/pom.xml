<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.azaptree</groupId>
		<artifactId>azaptree-services</artifactId>
		<version>0.0.4-SNAPSHOT</version>
	</parent>
	<artifactId>azaptree-security-service</artifactId>
	<name>AZAPTREE SECURITY SERVICE</name>
	<description>Provides security related services</description>

	<dependencies>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-aspectj</artifactId>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>com.azaptree</groupId>
			<artifactId>azaptree-domain-entity</artifactId>
			<version>0.0.4-SNAPSHOT</version>
		</dependency>

		<!-- *** THIS IS NOT NEEDED BY THE APPLICATION AT RUNTIME. *** -->
		<!-- It is a work around for the AspectJ Maven Compiler Plugin to work. 
			Aspect org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl 
			require for ajc javax.persistence.Entity to be on classpath, hovewer spring-aspect 
			pom.xml doesn't provide such dependency. As workaround one must declare dependency 
			in affected module pom.xml. -->
		<!-- See https://jira.springsource.org/browse/SPR-6819 - when this issue 
			is fixed in Spring, then this dependency can be removed -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.azaptree</groupId>
			<artifactId>azaptree-command-http-service</artifactId>
			<version>0.0.4-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<outxml>true</outxml>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
						<aspectLibrary>
							<groupId>org.apache.shiro</groupId>
							<artifactId>shiro-aspectj</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
				<executions>
					<execution>
						<id>aspectj-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>aspectj-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
			</plugin>
		</plugins>
	</build>
</project>